{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Portal da Transpar\u00eancia \u2014 Rob\u00f4 de Raspagem + API REST","text":"<p>Este projeto \u00e9 uma solu\u00e7\u00e3o de raspagem automatizada de dados p\u00fablicos diretamente do Portal da Transpar\u00eancia, utilizando as seguintes tecnologias:</p> <ul> <li>Playwright (Python): navega\u00e7\u00e3o e automa\u00e7\u00e3o de p\u00e1ginas.</li> <li>FastAPI: interface RESTful para expor as funcionalidades via HTTP.</li> <li>Google Sheets + Drive: persist\u00eancia dos dados extra\u00eddos.</li> <li>MkDocs Material: documenta\u00e7\u00e3o da aplica\u00e7\u00e3o.</li> </ul>"},{"location":"#funcionalidades","title":"\ud83d\udd0d Funcionalidades","text":"<ul> <li>Realiza buscas por CPF ou CNPJ no portal.</li> <li>Aplica filtros inteligentes com base nos dados dispon\u00edveis.</li> <li>Coleta dados detalhados (como benef\u00edcios recebidos, contratos, san\u00e7\u00f5es, entre outros).</li> <li>Exporta e armazena os dados em formato estruturado no Google Sheets e Drive.</li> <li>Disponibiliza tudo via uma API REST simples e robusta.</li> </ul>"},{"location":"#estrutura-do-projeto","title":"\ud83e\uddf1 Estrutura do Projeto","text":"<p>A estrutura do projeto \u00e9 organizada da seguinte forma:</p> <p>Core:  cont\u00e9m a l\u00f3gica principal de raspagem e manipula\u00e7\u00e3o de dados.</p> <p>Server: cont\u00e9m a API FastAPI, que exp\u00f5e os endpoints para intera\u00e7\u00e3o com o sistema, assim como a integra\u00e7\u00e3o com as apis do Google.</p> <p>A camada core possui toda l\u00f3gica de raspagem e manipula\u00e7\u00e3o de dados, separada por algumas estruturas b\u00e1sicas: Crawler, Filter e Selector. Cada uma dessas estruturas \u00e9 respons\u00e1vel por uma parte espec\u00edfica do processo de raspagem e exporta\u00e7\u00e3o dos dados. </p> <p>Um Crawler tem como principal responsabilidade navegar pelas p\u00e1ginas do portal e interagir com os elementos da interface. Para manter o c\u00f3digo robusto, os seletores s\u00e3o definidos em um arquivo separado, permitindo f\u00e1cil manuten\u00e7\u00e3o e atualiza\u00e7\u00e3o, utilizando uma simples <code>dataclass</code>.  Todo o processo de raspagem de dados pode ser separado em quatro telas principais: </p> <ol> <li> <p>Tela de Busca: onde o usu\u00e1rio insere o termo de busca e aplica os filtros. Esta tela tamb\u00e9m \u00e9 a mesma que possui os resultados da busca, que por sua vez, possui um bot\u00e3o para navegar para a pr\u00f3xima p\u00e1gina de resultados.</p> </li> <li> <p>Tela de Links de Detalhes: Ao clicar em um dos resultados, uma nova p\u00e1gina \u00e9 aberta, com dados r\u00e1pidos do resultado e v\u00e1rios bot\u00f5es para navegar para as telas com mais detalhes.</p> </li> <li> <p>Tela de Detalhes: Ao clicar em um dos bot\u00f5es da tela de links de detalhes, uma nova p\u00e1gina \u00e9 aberta com os dados detalhados do resultado. Esta por sua vez existe em duas varia\u00e7\u00f5es: a que chamamos de \"Tela de dados Tabelados\", e a \"Tela de consulta\".</p> </li> </ol> Tela de Busca Tela de Links Detalhes Tabelados Tela de Consulta <p>O projeto foi desenvolvido com o objetivo de ser modular e escal\u00e1vel, permitindo f\u00e1cil adi\u00e7\u00e3o de novas funcionalidades e melhorias. Neste sentido, \u00e9 poss\u00edvel adicionar novos crawlers, filtros e seletores conforme necess\u00e1rio, sem impactar a estrutura existente. Al\u00e9m disso, a utiliza\u00e7\u00e3o de dataclasses para definir os seletores torna o c\u00f3digo mais leg\u00edvel e f\u00e1cil de manter.</p> <p>Realizar a manuten\u00e7\u00e3o de uma tela pode ser feita de modo isolado, ou seja, se houver uma mudan\u00e7a na estrutura de uma tela, o c\u00f3digo do crawler n\u00e3o precisa ser alterado. Isso \u00e9 poss\u00edvel porque a l\u00f3gica de raspagem e manipula\u00e7\u00e3o de dados est\u00e1 separada da l\u00f3gica de intera\u00e7\u00e3o com a interface do usu\u00e1rio.</p> <p>Al\u00e9m disso, o projeto conta com um sistema de logs que permite acompanhar o andamento da raspagem e identificar poss\u00edveis erros ou falhas no processo, mecanismos de retry e timeout, tratamentos de exce\u00e7\u00f5es e preven\u00e7\u00e3o/dete\u00e7\u00e3o de bloqueios por parte do portal, incluindo captchas.</p> <p>Todo o fluxo de raspagem pode \u00e9 centralizado atra\u00e9s da classe <code>PortalTransparencia</code>, que possui m\u00e9todos para iniciar a raspagem, aplicar filtros e exportar os dados. Essa classe \u00e9 respons\u00e1vel por orquestrar todo o processo de raspagem e garantir que os dados sejam coletados de forma eficiente e precisa.</p>"},{"location":"#rodando-localmente","title":"\ud83d\ude80 Rodando localmente","text":"<p>A aplica\u00e7\u00e3o pode ser executada localmente tanto usando o Docker, quanto diretamente no Python:</p>"},{"location":"#usando-docker","title":"Usando docker","text":"<pre><code>docker compose build &amp;&amp; docker compose up -d\n</code></pre> <p>Nota: \u00e9 necess\u00e1rio ter o Docker e o Docker Compose instalados na m\u00e1quina e a porta 7000 livre.</p>"},{"location":"#sem-docker","title":"Sem docker","text":"<p>Primeiramente, recomenda-se utilizar um ambiente virtual. Por motivos de facilidade, recomenda-se o uso do Poetry, mas pode-se usar o <code>venv</code> ou <code>virtualenv</code> tamb\u00e9m.</p> <pre><code>    poetry install\n    sh fastapi.sh\n</code></pre> <p>IMPORTANTE: O projeto utiliza o Playwright, que requer a instala\u00e7\u00e3o de alguns navegadores. Para isso, execute o seguinte comando:</p> <pre><code>    playwright install\n</code></pre>"},{"location":"#configuracao-do-google-sheets","title":"Configura\u00e7\u00e3o do Google Sheets","text":"<p>Para utilizar a funcionalidade de exporta\u00e7\u00e3o para o Google Sheets funcione, \u00e9 necess\u00e1rio configurar as credenciais de acesso \u00e0 API do Google Sheets, presentes no arquivo .env. O arquivo de credenciais deve ser baixado do Google Cloud Console, com as permiss\u00f5es de Google Sheets e Google Drive habilitadas. Ap\u00f3s baixar o arquivo, renomeie-o para <code>credentials.json</code> e informe o caminho no arquivo <code>.env</code></p>"},{"location":"#documentacao","title":"\ud83d\udcdd Documenta\u00e7\u00e3o","text":"<p>A documenta\u00e7\u00e3o do projeto foi gerada utilizando o MkDocs e pode ser acessada em http://localhost:7000/docs. A documenta\u00e7\u00e3o inclui informa\u00e7\u00f5es sobre a estrutura do projeto, como utilizar a API, como executar o crawler e como contribuir para o projeto.</p>"},{"location":"crawler/details/","title":"Details","text":"<p>Para obter os dados detalhados dos itens, existem dois layouts de p\u00e1ginas diferentes. O primeiro, chamado de \"detalhes tabulares\", e possuem v\u00e1rias se\u00e7\u00f5es com informa\u00e7\u00f5es tabuladas. O segundo, chamamos de 'Consulta' e \u00e9 uma p\u00e1gina \u00fanica com informa\u00e7\u00f5es mais detalhadas, mas com apenas uma tabela.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails","title":"<code>desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails</code>","text":"<p>               Bases: <code>BaseDetails</code></p> <p>Coletor de dados para p\u00e1ginas tabulares do Portal da Transpar\u00eancia.</p> <p>Esta classe lida com dois elementos principais na interface: - <code>div.dados-tabelados</code>: se\u00e7\u00f5es em formato de tabela simples (semelhante a um formul\u00e1rio), onde uma coluna pode ter mais de uma chave. - <code>div.dados-detalhados</code>: se\u00e7\u00f5es expans\u00edveis que cont\u00eam tabelas com dados detalhados.</p> <p>Os dados detalhados podem conter at\u00e9 duas estruturas: - dados em bloco: cada linha possui v\u00e1rais c\u00e9lulas, estas por sua vez com uma chave e um valor. Essa estrutura \u00e9 semelhante a um formul\u00e1rio. - datatable: uma tabela com cabe\u00e7alho e v\u00e1rias linhas, onde cada linha representa um registro. Essa estrutura \u00e9 semelhante a uma tabela de banco de dados.</p> <p>Os dados retornados tem o seguinte formato: <pre><code>{\n    \"dados_tabelados\": {\n        \"key1\": \"value1\",\n        \"key2\": \"value2\",\n        ...\n    },\n    \"dados_detalhados\": {\n        \"section_title\": {\n            \"block_data\": {\n                \"key1\": \"value1\",\n                \"key2\": \"value2\",\n                ...\n            },\n            \"datatable_data\": [\n                [\"header1\", \"header2\", ...],\n                [\"row1_col1\", \"row1_col2\", ...],\n                ...\n            ]\n        },\n        ...\n    }\n}\n</code></pre> Em especial, caso datatable_data possua cabe\u00e7alhos mas n\u00e3o registros, o resultado ser\u00e1 algo da forma: ```python {     ...,     \"datatable_data\": [         [\"header1\", \"header2\", ...],         [\"Nenhum registro encontrado\"]     ] }</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__activate_all_detailed_sections","title":"<code>__activate_all_detailed_sections(page: Page)</code>  <code>async</code>","text":"<p>Ativa todas as se\u00e7\u00f5es expans\u00edveis de dados detalhados na p\u00e1gina.</p> <p>Algumas se\u00e7\u00f5es requerem intera\u00e7\u00e3o para revelar seu conte\u00fado. Essa fun\u00e7\u00e3o simula o clique em cada bot\u00e3o de expans\u00e3o, caso a se\u00e7\u00e3o ainda n\u00e3o esteja ativa.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>Inst\u00e2ncia da p\u00e1gina carregada.</p> required"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__collect_data_from_detailed_section","title":"<code>__collect_data_from_detailed_section(page: Page) -&gt; dict</code>  <code>async</code>","text":"<p>Coleta os dados de todas as se\u00e7\u00f5es de \"dados detalhados\" da p\u00e1gina.</p> <p>Cada se\u00e7\u00e3o pode conter: - Um bloco de dados em formato chave-valor. - Uma tabela com cabe\u00e7alho e m\u00faltiplas linhas (datatable).</p> <p>O conte\u00fado \u00e9 organizado por t\u00edtulo de se\u00e7\u00e3o.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina a ser processada.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>Dicion\u00e1rio contendo os dados extra\u00eddos por se\u00e7\u00e3o.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__collect_data_from_tabulated_section","title":"<code>__collect_data_from_tabulated_section(page: Page) -&gt; dict</code>  <code>async</code>","text":"<p>Extrai os dados da se\u00e7\u00e3o principal \"dados tabelados\".</p> <p>Esta se\u00e7\u00e3o cont\u00e9m informa\u00e7\u00f5es em formato de formul\u00e1rio, com chave e valor, possivelmente com m\u00faltiplas colunas por linha.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina onde os dados ser\u00e3o extra\u00eddos.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>Dicion\u00e1rio com pares chave-valor extra\u00eddos da se\u00e7\u00e3o principal.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__extact_data_block","title":"<code>__extact_data_block(datablock: ElementHandle) -&gt; dict</code>  <code>async</code>","text":"<p>Extrai os dados de um bloco do tipo formul\u00e1rio (chave-valor).</p> <p>Usado em se\u00e7\u00f5es de dados detalhados que possuem m\u00faltiplas colunas com pares chave-valor.</p> <p>Parameters:</p> Name Type Description Default <code>datablock</code> <code>ElementHandle</code> <p>Elemento contendo os dados do bloco.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>Dicion\u00e1rio com os pares extra\u00eddos.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__extract_data_table","title":"<code>__extract_data_table(table_container: ElementHandle) -&gt; list</code>  <code>async</code>","text":"<p>Extrai os dados de uma tabela tabular com cabe\u00e7alho e m\u00faltiplas linhas.</p> <p>Cada linha representa um registro. O cabe\u00e7alho \u00e9 inclu\u00eddo como a primeira linha da lista.</p> <p>Parameters:</p> Name Type Description Default <code>table_container</code> <code>ElementHandle</code> <p>Elemento que cont\u00e9m a tabela a ser processada.</p> required <p>Returns:</p> Name Type Description <code>list</code> <code>list</code> <p>Lista de listas, onde a primeira linha cont\u00e9m os cabe\u00e7alhos, seguida pelos registros. Caso a tabela n\u00e3o contenha registros, retorna uma lista com o cabe\u00e7alho e uma mensagem padr\u00e3o: [\"Nenhum registro encontrado\"].</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__extract_key_value_pairs","title":"<code>__extract_key_value_pairs(container: ElementHandle) -&gt; dict[str, str]</code>  <code>async</code>","text":"<p>Extrai pares chave-valor de um container com colunas estruturadas.</p> <p>Este m\u00e9todo \u00e9 utilizado para processar blocos do tipo formul\u00e1rio, onde cada coluna cont\u00e9m uma c\u00e9lula com a chave (label) e uma c\u00e9lula com o valor correspondente.</p> <p>Parameters:</p> Name Type Description Default <code>container</code> <code>ElementHandle</code> <p>Elemento HTML contendo as colunas a serem extra\u00eddas.</p> required <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: Dicion\u00e1rio com os pares extra\u00eddos do container.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.__normalize_keys","title":"<code>__normalize_keys(data: dict[str, Any]) -&gt; dict[str, Any]</code>  <code>async</code>","text":"<p>Normaliza as chaves de um dicion\u00e1rio recursivamente.</p> <p>Remove espa\u00e7os, converte para min\u00fasculo e substitui espa\u00e7os por underscore. Aplica-se a chaves internas em dicion\u00e1rios aninhados ou listas de dicion\u00e1rios.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>Dicion\u00e1rio com as chaves originais.</p> required <p>Returns:</p> Name Type Description <code>dict</code> <code>dict[str, Any]</code> <p>Dicion\u00e1rio com as chaves normalizadas.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.tabular_details.TabularDetails.fetch","title":"<code>fetch(url: str, raise_for_captcha: bool = True, **kwargs) -&gt; dict[str, Any]</code>  <code>async</code>","text":"<p>Coleta todos os dados de uma p\u00e1gina tabular do Portal da Transpar\u00eancia.</p> <p>Realiza a ativa\u00e7\u00e3o das se\u00e7\u00f5es expans\u00edveis, extrai os dados da se\u00e7\u00e3o principal (\"dados tabelados\") e das se\u00e7\u00f5es detalhadas (que podem conter blocos ou tabelas), e normaliza as chaves para um formato padronizado.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL da p\u00e1gina tabular.</p> required <code>raise_for_captcha</code> <code>bool</code> <p>Se True, levanta uma exce\u00e7\u00e3o se um captcha for detectado. Defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict[str, Any]</code> <p>Dicion\u00e1rio contendo os dados extra\u00eddos da p\u00e1gina, com as chaves normalizadas.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails","title":"<code>desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails</code>","text":"<p>               Bases: <code>BaseDetails</code></p> <p>Crawler para coletar detalhes de consultas.</p> <p>Uma consulta \u00e9 uma p\u00e1gina padronizada do portal da transpar\u00eancia que \u00e9 reutilizado em v\u00e1rias opera\u00e7\u00f5es de detalhamento. Ela fornecesse os dados em forma de tabela, possui filtros e pagina\u00e7\u00e3o.</p> <p>Esta classe \u00e9 capaz de extrair os dados de uma consulta e retornar os resultados em um formato padronizado. \u00c9 poss\u00edvel extrair os dados de uma \u00fanica p\u00e1gina ou de todas as p\u00e1ginas dispon\u00edveis, dependendo do par\u00e2metro <code>recursive</code>.</p> <p>Opera\u00e7\u00f5es que utilizam este layout: - Consulta de Recursos Publicos - Consulta de Viagens \u00e1 Servi\u00e7os - Uso do cart\u00e3o de Pagamento do Governo Federal ou da Defesa Civil - Consulta de im\u00f3veis funcionais cedidos - Contratos firmados com o Governo Federal - Notas fiscais emitidas</p> <p>Algumas dessas opera\u00e7\u00f5es possui bot\u00f5es de detalhes mais espec\u00edficos que N\u00c3O s\u00e3o suportados por este crawler. Ao inv\u00e9s disso, apenas coletamos o link, se dispon\u00edvel, para que um crawler espec\u00edfico possa coletar os dados.</p> Exemplo de uso <pre><code>from desafio_mosqti.core.crawlers.details.consult import ConsultDetails\n\nasync def main():\n    with async_playwright() as p:\n        browser = await p.chromium.launch(headless=False)\n        page = await browser.new_page()\n        url = \"https://portaldatransparencia.gov.br/cartoes/consulta?portador=7710354&amp;ordenarPor=mesExtrato&amp;direcao=desc\" # exemplo com Cart\u00e3o de Pagamento\n        consult_details = ConsultDetails(page=page)\n        data = await consult_details.fetch(url)\n        print(data)\n\nasyncio.run(main())\n</code></pre>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.__next_page","title":"<code>__next_page(page: Page) -&gt; bool</code>  <code>async</code>","text":"<p>Avan\u00e7a para a pr\u00f3xima p\u00e1gina de resultados se dispon\u00edvel.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina atual.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True se houve navega\u00e7\u00e3o para pr\u00f3xima p\u00e1gina, False caso contr\u00e1rio.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.__safe_load","title":"<code>__safe_load(page: Page)</code>  <code>async</code>","text":"<p>Aguarda o carregamento da tabela principal e o t\u00e9rmino dos elementos de loading.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina atual.</p> required"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.__set_max_results_per_page","title":"<code>__set_max_results_per_page(page: Page) -&gt; None</code>  <code>async</code>","text":"<p>Define o n\u00famero m\u00e1ximo de resultados exibidos por p\u00e1gina para facilitar a coleta.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina atual.</p> required"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.collect_data","title":"<code>collect_data(page: Page, include_header: bool = False, recursive: bool = False, set_max_results: bool = True) -&gt; list[dict]</code>  <code>async</code>","text":"<p>Coleta os dados da tabela de uma p\u00e1gina de consulta iterando sobre suas linhas. Caso a consulta seja profunda, coleta os dados de todas as p\u00e1ginas dispon\u00edveis.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina atual de consulta.</p> required <code>include_header</code> <code>bool</code> <p>Se True, inclui os cabe\u00e7alhos da tabela no in\u00edcio dos dados. Defaults to False.</p> <code>False</code> <code>recursive</code> <code>bool</code> <p>Se True, coleta dados de todas as p\u00e1ginas dispon\u00edveis. Defaults to False.</p> <code>False</code> <code>set_max_results</code> <code>bool</code> <p>Se True, define o n\u00famero m\u00e1ximo de resultados por p\u00e1gina. Defaults to True.</p> <code>True</code> <p>Returns:     list[dict]: Dados coletados da(s) p\u00e1gina(s).</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.fetch","title":"<code>fetch(url: str, recursive: bool = False, raise_for_captcha: bool = True)</code>  <code>async</code>","text":"<p>Coleta os dados de uma p\u00e1gina de consulta do Portal da Transpar\u00eancia.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL da p\u00e1gina de consulta.</p> required <code>recursive</code> <code>bool</code> <p>Se True, percorre todas as p\u00e1ginas dispon\u00edveis. Defaults to False.</p> <code>False</code> <code>raise_for_captcha</code> <code>bool</code> <p>Se True, levanta uma exce\u00e7\u00e3o se um captcha for detectado. Defaults to True.</p> <code>True</code> <p>Returns:</p> Type Description <p>list[dict]: Lista de registros coletados, cada registro representado como um dicion\u00e1rio.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.get_table_data","title":"<code>get_table_data(table: ElementHandle) -&gt; list[dict]</code>  <code>async</code>","text":"<p>Extrai os dados de todas as linhas da tabela. Caso a c\u00e9lula possua um link, coleta o href. Caso contr\u00e1rio, coleta o texto.</p> <p>Parameters:</p> Name Type Description Default <code>table</code> <code>ElementHandle</code> <p>Elemento da tabela.</p> required <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: Lista de registros, onde cada registro \u00e9 uma lista de valores por c\u00e9lula.</p>"},{"location":"crawler/details/#desafio_mosqti.core.crawlers.details.consult_details.ConsultDetails.get_table_headers","title":"<code>get_table_headers(table: ElementHandle) -&gt; list[str]</code>  <code>async</code>","text":"<p>Extrai os cabe\u00e7alhos da tabela.</p> <p>Parameters:</p> Name Type Description Default <code>table</code> <code>ElementHandle</code> <p>Elemento da tabela.</p> required <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: Lista de nomes das colunas.</p>"},{"location":"crawler/elements_selectors/","title":"Elements Selectors","text":"<p>As classes de seletores de elementos s\u00e3o simples dataclasses que definem os seletores como atributos. Desta forma, \u00e9 poss\u00edvel referenciar aos seletores de forma mais leg\u00edvel e sem deix\u00e1-las hardcoded no c\u00f3digo. Para facilitar o desenvolvimento, os atributos de classe s\u00e3o tipados como <code>Literal</code>, o que permite utilizar o editor para autocompletar os seletores dispon\u00edveis. Al\u00e9m disso, pelo fato de serem dataclasses em um arquivo separado, \u00e9 poss\u00edvel utilizar docstrings para documentar os seletores, o que facilita a manuten\u00e7\u00e3o e compreens\u00e3o do c\u00f3digo.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector","title":"<code>desafio_mosqti.core.elements_selectors.selector.SearcherSelector</code>  <code>dataclass</code>","text":"<p>Classe para armazenar os seletores de busca.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector.resullt_item_info","title":"<code>resullt_item_info: Literal['div.col-sm-12'] = 'div.col-sm-12'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Representa uma linha no card de resultados. Trata-se de uma classe do bootstrap, ent\u00e3o deve ser utilziada com cuidado, preferencialmente \u00e1 partir o pai. Por exemplo: <code>Selector.result_item</code> &gt; div.col-sm-12 ir\u00e1 pegar todas as linhas do card de resultado.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector.result_item","title":"<code>result_item: Literal['div.br-item'] = 'div.br-item'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor da div que cont\u00e9m os dados do resultado da busca</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector.result_item_link","title":"<code>result_item_link: Literal['a.link-busca-nome'] = 'a.link-busca-nome'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor a url do recurso encontrado na busca</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector.results","title":"<code>results: Literal['span#resultados'] = 'span#resultados'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor do container com os intens do resultado da busca. Pode ser utilizado para detectar se a p\u00e1gina carregou ou extrair os dados do resultado da busca</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.SearcherSelector.results_count_selector","title":"<code>results_count_selector: Literal['xpath=/html/body/main/div/div[2]/div[2]/div[2]/div[1]/div/div/div[2]'] = 'xpath=/html/body/main/div/div[2]/div[2]/div[2]/div[1]/div/div/div[2]'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor do elemento que informa a quantidade de resultados a busca trouxe. Como trata-se de um xpath, pode ser utilizado diretamente de <code>Page</code> ou de um <code>ElementHandle</code> que cont\u00e9m este elemento.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector","title":"<code>desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector</code>  <code>dataclass</code>","text":"<p>Seletor para detalhes de CPF.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.beneficiary_federal_resources","title":"<code>beneficiary_federal_resources: Literal['div.row &gt; div.col-xs-12'] = 'div.row &gt; div.col-xs-12'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Este seletor \u00e9 utilizado para tratar um side-case: A se\u00e7\u00e3o \"Recebimento de Recursos\" possui dados tanto de benef\u00edcios quanto de recebimentos de recursos, em um layout diferente. Este seletor \u00e9 utilizado para obter os dados de recebimentos de recursos.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.beneficiary_federal_resources_title","title":"<code>beneficiary_federal_resources_title: Literal['xpath=/html/body/main/div/div[2]/div[2]/div/div[2]/div/div/strong'] = 'xpath=/html/body/main/div/div[2]/div[2]/div/div[2]/div/div/strong'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Este seletor \u00e9 utilizado para tratar um side-case: A se\u00e7\u00e3o \"Recebimento de Recursos\" possui dados tanto de benef\u00edcios quanto de recebimentos de recursos, em um layout diferente. Este seletor \u00e9 utilizado para obter o t\u00edtulo da se\u00e7\u00e3o de recebimentos de recursos.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.detail_row_container","title":"<code>detail_row_container: Literal['div[id^=\"accordion\"]'] = 'div[id^=\"accordion\"]'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Assim que os accordions s\u00e3o expandidos, suas informa\u00e7\u00f5es est\u00e3o dispon\u00edveis em uma div com o id come\u00e7ando com \"accordion\". Exemplo: <code>accordion-bolsa-familia</code>, <code>accordion-cartao-pagamento</code>, etc. Esse seletor obt\u00e9m essa(s) div(s).</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.details_button","title":"<code>details_button: str = 'a.br-button'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Cada <code>accordion</code> possui um bot\u00e3o de detalhes, que por sua vez cont\u00e9m um link para uma  p\u00e1gina de detalhes. Este seletor obt\u00e9m esse bot\u00e3o.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.details_container","title":"<code>details_container: Literal['#accordion1'] = '#accordion1'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Container que cont\u00e9m todos os <code>accordions</code> de detalhes. Cada <code>accordion</code> cont\u00e9m detalhes de um tipo espec\u00edfico. Exemplo: <code>Benef\u00edcios</code>, <code>Cart\u00f5es de Pagamento</code>, <code>Conv\u00eanios</code>, etc.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.itens","title":"<code>itens: Literal['div.item &gt; button'] = 'div.item &gt; button'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Cada <code>accordion</code> possui um bot\u00e3o de detalhes, e um bot\u00e3o de titulo. O bot\u00e3o de titulo possui o nome da se\u00e7\u00e3o e, ao clicar, expande ou colapsa o conte\u00fado do <code>accordion</code>. Este seletor obt\u00e9m esse bot\u00e3o.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.subsection","title":"<code>subsection: Literal['div.br-table'] = 'div.br-table'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Alguns accordions possuem subse\u00e7\u00f5es, com v\u00e1rios bot\u00f5es de detalhes. Por exemplo, a se\u00e7\u00e3o de 'Recebimento de Recursos' possui v\u00e1rias subse\u00e7\u00f5es, como 'Bolsa Fam\u00edlia', 'Aux\u00edlio Emergencial', etc. Esse seletor obt\u00e9m essas subse\u00e7\u00f5es.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.DetailsLinksSelector.subsection_title","title":"<code>subsection_title: Literal['div.responsive &gt; strong'] = 'div.responsive &gt; strong'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>T\u00edtulo da subse\u00e7\u00e3o. Exemplo: <code>Bolsa Fam\u00edlia</code>, <code>Aux\u00edlio Emergencial</code>, etc. Esse seletor obt\u00e9m o t\u00edtulo da subse\u00e7\u00e3o. veja: <code>subsection</code> para mais detalhes.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector","title":"<code>desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector</code>","text":"<p>Seletor para a consulta de detalhes.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector.loading_selector","title":"<code>loading_selector: Literal['div#spinner'] = 'div#spinner'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor do elemento que indica que a p\u00e1gina est\u00e1 carregando.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector.next_page","title":"<code>next_page: Literal['li#lista_next'] = 'li#lista_next'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor do elemento que permite navegar para a pr\u00f3xima p\u00e1gina de resultados.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector.results_per_time","title":"<code>results_per_time: Literal['select.form-control'] = 'select.form-control'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor do elemento que permite escolher a quantidade de resultados por p\u00e1gina.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector.table_headers","title":"<code>table_headers: Literal['thead th'] = 'thead th'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor dos cabe\u00e7alhos da tabela.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.ConsultDetailsSelector.table_selector","title":"<code>table_selector: Literal['table#lista'] = 'table#lista'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seletor da tabela que cont\u00e9m os dados do resultado da busca.</p>"},{"location":"crawler/elements_selectors/#desafio_mosqti.core.elements_selectors.selector.TabularDetailsSelector","title":"<code>desafio_mosqti.core.elements_selectors.selector.TabularDetailsSelector</code>","text":"<p>Seletor para detalhes tabulares.</p>"},{"location":"crawler/filters/","title":"Filters","text":""},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter","title":"<code>desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter</code>","text":"<p>               Bases: <code>BaseFilter</code></p> <p>Esquema para o filtro de CNPJ.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.emitente_nfe","title":"<code>emitente_nfe: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CNPJ \u00e9 emitente de NFE.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.grupo_objeto","title":"<code>grupo_objeto: str | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>C\u00f3digo do grupo de objeto. Mais de um grupo pode ser passado, separados por v\u00edrgula. Ex: \"1,2,3\" para Obras, Servi\u00e7os e Bens Patrimoniais. Veja a enumera\u00e7\u00e3o <code>GrupoObjeto</code></p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.municipio","title":"<code>municipio: str | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geocode do munic\u00edpio da empresa, ex: \"3304557\" para o munic\u00edpio do Rio de Janeiro. Veja: https://www.ibge.gov.br/explica/codigos-dos-municipios.php para mais detalhes.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.sancao_vigente","title":"<code>sancao_vigente: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CNPJ est\u00e1 sob san\u00e7\u00e3o vigente.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.tipo_natureza_juridica","title":"<code>tipo_natureza_juridica: NaturezaJuridica = NaturezaJuridica.TODOS</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tipo de natureza jur\u00eddica da empresa.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.uf_pessoa_juridica","title":"<code>uf_pessoa_juridica: str | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>UF da pessoa jur\u00eddica da empresa no formato \"XX\". Ex: \"SP\", \"RJ\", \"MG\".</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.valor_gastos_diretos_ate","title":"<code>valor_gastos_diretos_ate: float | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Valor m\u00e1ximo dos gastos diretos. Nota: Existe um bug no portal em que esse filtro n\u00e3o ir\u00e1 funcionar, mas a busca ir\u00e1 redirecionar para uma p\u00e1gina de erro 400(?). Chamando a API diretamente, o filtro funciona.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.valor_gastos_diretos_de","title":"<code>valor_gastos_diretos_de: float | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Valor m\u00ednimo dos gastos diretos. Nota: Existe um bug no portal em que esse filtro n\u00e3o ir\u00e1 funcionar, mas a busca ir\u00e1 redirecionar para uma p\u00e1gina de erro 400(?). Chamando a API diretamente, o filtro funciona.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.valor_transferencia_ate","title":"<code>valor_transferencia_ate: float | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Valor m\u00e1ximo da transfer\u00eancia. Nota: Existe um bug no portal em que esse filtro n\u00e3o ir\u00e1 funcionar, mas a busca ir\u00e1 redirecionar para uma p\u00e1gina de erro 400(?). Chamando a API diretamente, o filtro funciona.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.CNPJSearchFilter.valor_transferencia_de","title":"<code>valor_transferencia_de: float | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Valor m\u00ednimo da transfer\u00eancia. Nota: Existe um bug no portal em que esse filtro n\u00e3o ir\u00e1 funcionar, mas a busca ir\u00e1 redirecionar para uma p\u00e1gina de erro 400(?). Chamando a API diretamente, o filtro funciona.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.NaturezaJuridica","title":"<code>desafio_mosqti.core.filters.cnpj_search_filter.NaturezaJuridica</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Enumera\u00e7\u00e3o para os tipos de natureza jur\u00eddica.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cnpj_search_filter.GrupoObjeto","title":"<code>desafio_mosqti.core.filters.cnpj_search_filter.GrupoObjeto</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Enumera\u00e7\u00e3o para os grupos de objeto.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter","title":"<code>desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter</code>","text":"<p>               Bases: <code>BaseFilter</code></p> <p>Esquema para o filtro de CPF.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.beneficiario_programa_social","title":"<code>beneficiario_programa_social: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 de um benefici\u00e1rio de programa social.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.emitente_nfe","title":"<code>emitente_nfe: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 emitente de NFE.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.favorecido_recurso","title":"<code>favorecido_recurso: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 favorecido de recurso p\u00fablico.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.ocupante_imovel_funcional","title":"<code>ocupante_imovel_funcional: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF ocupa im\u00f3vel funcional.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.portador_cpdc","title":"<code>portador_cpdc: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 de um portador do CPDC.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.portador_cpgf","title":"<code>portador_cpgf: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 de um portador do CPGF.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.possui_contrato","title":"<code>possui_contrato: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF possui contrato.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.sancao_vigente","title":"<code>sancao_vigente: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF est\u00e1 sob san\u00e7\u00e3o vigente.</p>"},{"location":"crawler/filters/#desafio_mosqti.core.filters.cpf_search_filter.CPFSearchFilter.servidor_publico","title":"<code>servidor_publico: bool | None = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Se o CPF \u00e9 de um servidor p\u00fablico.</p>"},{"location":"crawler/portal_transparencia/","title":"Portal Transpar\u00eancia","text":""},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia","title":"<code>desafio_mosqti.core.portal_transparencia.PortalTransparencia</code>","text":"<p>Classe principal para orquestrar a coleta de dados do Portal da Transpar\u00eancia.</p> <p>Esta classe integra os componentes de busca (Searcher), extra\u00e7\u00e3o de links de detalhes (DetailsLinks), e coleta dos dados detalhados (TabularDetails, ConsultDetails). Permite a coleta de dados em lote com randomiza\u00e7\u00e3o de contexto (user-agent, timezone, etc) para evitar bloqueios e fingerprinting.</p> <p>Ao realizar uma busca, <code>Searcher</code> retorna uma lista de resultados, seguindo os filtros e par\u00e2metros especificados. Se <code>extract_details</code> for definido como <code>True</code>, ent\u00e3o o Crawler <code>DetailsLinks</code> \u00e9 utilizado em cada um dos resultados de busca para extrair os links de detalhes. Finalmente, os detalhes s\u00e3o extra\u00eddos utilizando o Crawler apropriado (TabularDetails ou ConsultDetails) para cada link. O resultado final \u00e9 uma lista de dicion\u00e1rios, onde cada dicion\u00e1rio cont\u00e9m os dados do resultado da busca e os detalhes extra\u00eddos.</p> <p>O 'Crawler appropriado' \u00e9 determinado baseado na URL do detalhe. O mapeamento entre URL e Crawler \u00e9 definido no dicion\u00e1rio <code>DETAIL_PAGE_MAP</code>. Cada URL \u00e9 mapeada para uma classe de detalhe correspondente. Embora o mapeamento seja est\u00e1tico, ele \u00e9 mais eficiente do que utilizar for\u00e7a bruta para descobrir qual classe de detalhe utilizar</p> <p>Decidimos utilizar o padr\u00e3o de projeto <code>Orquestrador</code> para facilitar a integra\u00e7\u00e3o entre os diferentes componentes</p> <p>Exemplos de uso:</p> Realizando uma busca por CNPJ, sem extra\u00e7\u00e3o de detalhes. <pre><code>from desafio_mosqti.core.portal_transparencia import PortalTransparencia\nfrom desafio_mosqti.core.filters import CNPJSearchFilter\nfrom desafio_mosqti.core.schemas.search_result import CnpjSearchResult\nasync def main():\n    async with PortalTransparencia(headless=False) as portal:\n        cnpj_result = await portal.search(\n            query=\"12345678000195\",\n            mode=\"cnpj\",\n            force_max_results=True,\n            extract_details=False,\n            _filter=CNPJSearchFilter(\n                servidor_publico=True,\n                beneficiario_programa_social=True,\n                sancao_vigente=True,\n            ),\n        )\n        print(cnpj_result)\n</code></pre> <p>A sa\u00edda ser\u00e1 algo do tipo:</p> <pre><code>[\n    {\n        \"nome\": \"Nome do CNPJ\",\n        \"cnpj\": \"12345678000195\",\n        \"url\": \"https://portaldatransparencia.gov.br/consulta/12345678000195\",\n        \"links\": [],\n        \"details\": []\n    },\n    ...]\n</code></pre> Realizando uma busca por CPF e extraindo detalhes. <p><pre><code>from desafio_mosqti.core.portal_transparencia import PortalTransparencia\nfrom desafio_mosqti.core.filters import CPFSearchFilter\nfrom desafio_mosqti.core.schemas.search_result import CpfSearchResult\n\n\nasync def main():\n    async with PortalTransparencia(headless=False) as portal:\n        cpf_result = await portal.search(\n            query=\"12345678901\",\n            mode=\"cpf\",\n            force_max_results=True,\n            extract_details=True,\n            _filter=CPFSearchFilter(\n                servidor_publico=True,\n                beneficiario_programa_social=True,\n                sancao_vigente=True,\n            ),\n        )\n        print(cpf_result)\n</code></pre> A sa\u00edda ser\u00e1 algo do tipo: <pre><code>[\n    {\n        \"nome\": \"Nome do CPF\",\n        \"cpf\": \"12345678901\",\n        \"url\": \"https://portaldatransparencia.gov.br/busca/pessoa-fisica/839213-nome-da-pessoa\",\n        \"beneficio_tipo\": \"Servidor P\u00fablico, Favorecido de recurso p\u00fablico\",\n        \"links\": [],\n        \"details\": {\n            \"accordion-serivdor_0\": {\n                \"dados_tabelados\": {\n                    \"Nome\": \"Nome do CPF\",\n                    \"CPF\": \"12345678901\",\n                    \"Cargo\": \"Cargo do CPF\",\n                },\n                \"dados_detalhados\": {\n                    \"evidence\": \"iVAANSUhEUgAAB1YAAA ...\", # imagem base64,\n                    ...\n            }\n        }\n    },\n    ...]\n</code></pre> NOTE: Veja as classes <code>ConsultDetails</code> e <code>TabularDetails</code> para mais detalhes sobre os dados extra\u00eddos.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__aenter__","title":"<code>__aenter__() -&gt; PortalTransparencia</code>  <code>async</code>","text":"<p>Inicializa o Playwright, navegador e prepara os contextos.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__aexit__","title":"<code>__aexit__(exc_type, exc_val, exc_tb)</code>  <code>async</code>","text":"<p>Fecha todas as p\u00e1ginas, contextos e o navegador ao encerrar o uso com 'async with'.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__discover_detail_page","title":"<code>__discover_detail_page(url: str) -&gt; Optional[Union[TabularDetails, ConsultDetails]]</code>  <code>async</code>","text":"<p>Descobre a p\u00e1gina de detalhes com base na URL.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL da p\u00e1gina de detalhes.</p> required <p>Returns:</p> Type Description <code>Optional[Union[TabularDetails, ConsultDetails]]</code> <p>Optional[Union[TabularDetails, ConsultDetails]]: Classe correspondente \u00e0 p\u00e1gina de detalhes.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__get_details_links","title":"<code>__get_details_links(search_result: list[Union[CpfSearchResult, CnpjSearchResult]], *, page: Page | None = None) -&gt; list[Union[CpfSearchResult, CnpjSearchResult]]</code>  <code>async</code>","text":"<p>Extrai os links de detalhes dos resultados da pesquisa.</p> <p>Parameters:</p> Name Type Description Default <code>search_result</code> <code>Union[CpfSearchResult, CnpjSearchResult]</code> <p>Resultados da pesquisa.</p> required <p>Returns:</p> Type Description <code>list[Union[CpfSearchResult, CnpjSearchResult]]</code> <p>list[Union[CpfSearchResult, CnpjSearchResult]]: Lista de links de detalhes.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__init__","title":"<code>__init__(headless: bool = False, logger: Logger | None = None)</code>","text":"<p>Inicializa o orquestrador do portal.</p> <p>Parameters:</p> Name Type Description Default <code>headless</code> <code>bool</code> <p>Define se o navegador ser\u00e1 executado em modo invis\u00edvel.</p> <code>False</code> <code>logger</code> <code>(Logger, opcional)</code> <p>Logger customizado. Se n\u00e3o for fornecido, usa o logger padr\u00e3o.</p> <code>None</code>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__new_page","title":"<code>__new_page() -&gt; Page</code>  <code>async</code>","text":"<p>Cria uma nova p\u00e1gina em um contexto randomizado.</p> <p>Returns:</p> Name Type Description <code>Page</code> <code>Page</code> <p>A nova p\u00e1gina criada.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.__randomize_context","title":"<code>__randomize_context(browser: Browser) -&gt; BrowserContext</code>  <code>async</code>","text":"<p>Cria um novo contexto de navegador com fingerprint aleat\u00f3rio para evitar bloqueios.</p> <p>Parameters:</p> Name Type Description Default <code>browser</code> <code>Browser</code> <p>Inst\u00e2ncia do navegador.</p> required <p>Returns:     BrowserContext: Novo contexto do navegador.</p>"},{"location":"crawler/portal_transparencia/#desafio_mosqti.core.portal_transparencia.PortalTransparencia.search","title":"<code>search(query: str, *, mode: Literal['cpf', 'cnpj'] = 'cpf', _filter: Optional[Union[CPFSearchFilter, CNPJSearchFilter]] = None, extract_details: bool = False, search_result_limit: int | None = None)</code>  <code>async</code>","text":"<p>Executa uma busca no portal da transpar\u00eancia por CPF ou CNPJ.</p> <p>Pode incluir extra\u00e7\u00e3o dos links de detalhes e posterior raspagem dos detalhes.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>CPF ou CNPJ a ser pesquisado.</p> required <code>mode</code> <code>Literal['cpf', 'cnpj']</code> <p>Modo de pesquisa. Defaults to \"cpf\".</p> <code>'cpf'</code> <code>_filter</code> <code>Optional[Union[CPFSearchFilter, CNPJSearchFilter]]</code> <p>Filtro a ser aplicado. Defaults to None.</p> <code>None</code> <code>extract_details</code> <code>bool</code> <p>Se True, extrai os detalhes dos resultados. Defaults to False.</p> <code>False</code> <code>search_result_limit</code> <code>int | None</code> <p>Limite de resultados a serem retornados. Defaults to None.</p> <code>None</code> <p>Returns:     list[Union[CpfSearchResult, CnpjSearchResult]: Lista de resultados da pesquisa.</p>"},{"location":"crawler/schemas/","title":"Schemas","text":""},{"location":"crawler/schemas/#os-schemas-sao-utilizados-para-definir-a-estrutura-dos-dados-que-serao-retornados-pelos-crawlers-eles-sao-utilizados-para-validar-os-dados-retornados-pelos-crawlers-e-garantir-que-eles-estejam-no-formato-correto-os-schemas-sao-definidos-como-dataclasses-o-que-facilita-a-leitura-e-manutencao-do-codigo","title":"Os schemas s\u00e3o utilizados para definir a estrutura dos dados que ser\u00e3o retornados pelos crawlers. Eles s\u00e3o utilizados para validar os dados retornados pelos crawlers e garantir que eles estejam no formato correto. Os schemas s\u00e3o definidos como dataclasses, o que facilita a leitura e manuten\u00e7\u00e3o do c\u00f3digo.","text":""},{"location":"crawler/schemas/#cpfsearchresult","title":"CpfSearchResult","text":""},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult","title":"<code>desafio_mosqti.core.schemas.search_result.CpfSearchResult</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Esquema para representar o resultado da busca de CPF, retornado por desafio_mosqti.core.crawlers.searcher.Searcher</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.beneficio_tipo","title":"<code>beneficio_tipo: str</code>  <code>instance-attribute</code>","text":"<p>Tipo de benef\u00edcio.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.cpf","title":"<code>cpf: str</code>  <code>instance-attribute</code>","text":"<p>6 dig\u00edtos centrais do CPF. Ex: *.123.456-</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.details","title":"<code>details: dict[str, Any] | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Detalhes adicionais sobre o benefici\u00e1rio, se dispon\u00edveis.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.details_links","title":"<code>details_links: dict[str, str] | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Links para detalhes adicionais, se dispon\u00edveis.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.nome","title":"<code>nome: str</code>  <code>instance-attribute</code>","text":"<p>Nome do benefici\u00e1rio.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CpfSearchResult.url","title":"<code>url: str</code>  <code>instance-attribute</code>","text":"<p>URL do resultado da busca.</p>"},{"location":"crawler/schemas/#cnpjsearchresult","title":"CnpjSearchResult","text":""},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult","title":"<code>desafio_mosqti.core.schemas.search_result.CnpjSearchResult</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Esquema para o resultado da busca de CNPJ.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.cnpj","title":"<code>cnpj: str</code>  <code>instance-attribute</code>","text":"<p>CNPJ da empresa, formatado como 00.000.000/0000-00.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.details","title":"<code>details: dict[str, Any] | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Detalhes adicionais sobre a empresa, se dispon\u00edveis.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.details_links","title":"<code>details_links: dict[str, str] | None = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Links para detalhes adicionais, se dispon\u00edveis.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.grupo_natureza_jud","title":"<code>grupo_natureza_jud: str</code>  <code>instance-attribute</code>","text":"<p>Grupo de natureza jur\u00eddica da empresa.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.muni_uf","title":"<code>muni_uf: str</code>  <code>instance-attribute</code>","text":"<p>Munic\u00edpio e UF da empresa, formatado como \"Munic\u00edpio/UF\".</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.nome","title":"<code>nome: str</code>  <code>instance-attribute</code>","text":"<p>Nome da empresa.</p>"},{"location":"crawler/schemas/#desafio_mosqti.core.schemas.search_result.CnpjSearchResult.url","title":"<code>url: str</code>  <code>instance-attribute</code>","text":"<p>URL do resultado da busca.</p>"},{"location":"crawler/searcher/","title":"Searcher","text":""},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher","title":"<code>desafio_mosqti.core.crawlers.searcher.Searcher</code>","text":"<p>               Bases: <code>BaseCrawler</code></p> <p>Crawler para buscas no Portal da Transpar\u00eancia (Pessoa F\u00edsica e Jur\u00eddica).</p> <p>Esta classe realiza consultas p\u00fablicas por CPF ou CNPJ, aplicando filtros opcionais, e retornando os resultados estruturados como inst\u00e2ncias de CpfSearchResult ou CnpjSearchResult. O crawler \u00e9 capaz de lidar com diferentes tipos de filtros, como natureza jur\u00eddica, munic\u00edpio,</p> <p>Tamb\u00e9m \u00e9 poss\u00edvel realizar a pagina\u00e7\u00e3o dos resultados, limitar a quantidade de resultados, verificar a presen\u00e7a de captchas e auto retentar em caso de falhas.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher--recursos-disponiveis","title":"Recursos dispon\u00edveis:","text":"<ul> <li>Gera\u00e7\u00e3o da URL com base no tipo de consulta e filtros.</li> <li>Pagina\u00e7\u00e3o de resultados (opcional, at\u00e9 200 itens).</li> <li>Extra\u00e7\u00e3o estruturada de dados a partir da lista de resultados.</li> <li>Compat\u00edvel com modos \"cpf\" e \"cnpj\".</li> </ul> <p>Exemplo de uso: <pre><code>from desafio_mosqti.core.crawlers.searcher import Searcher\nfrom desafio_mosqti.core.filters import CNPJSearchFilter\nfrom desafio_mosqti.core.schemas.search_result import CnpjSearchResult\nimport asyncio\n\nasync def main():\n    async with async_playwright() as p:\n        browser = await p.chromium.launch()\n        page = await browser.new_page()\n        searcher = Searcher(page=page)\n        filter = CNPJSearchFilter(tipo_natureza_juridica=1)\n        result = await searcher.search(\n            query=\"12345678000195\",\n            mode=\"cnpj\",\n            _filter=filter,\n            force_max_results=True,\n            limit_results=10\n        )\n        print(result)\nasyncio.run(main())\n</code></pre></p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__calculate_page_count","title":"<code>__calculate_page_count(total_results: int) -&gt; int</code>","text":"<p>Calcula o n\u00famero de p\u00e1ginas com base no total de resultados.</p> <p>Parameters:</p> Name Type Description Default <code>total_results</code> <code>int</code> <p>Quantidade de resultados identificados.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>N\u00famero de p\u00e1ginas necess\u00e1rias (m\u00e1x. 200 resultados).</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__get_mode_from_url","title":"<code>__get_mode_from_url(url: str) -&gt; Literal['cpf', 'cnpj']</code>","text":"<p>Determina o modo de busca com base na URL.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>URL acessada.</p> required <p>Returns:</p> Type Description <code>Literal['cpf', 'cnpj']</code> <p>Literal[\"cpf\", \"cnpj\"]: Modo identificado.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se a URL n\u00e3o contiver um modo reconhecido.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__go_to_next_page","title":"<code>__go_to_next_page(page: Page, current_page: int, total_pages: int) -&gt; None</code>  <code>async</code>","text":"<p>Navega para a pr\u00f3xima p\u00e1gina da lista de resultados.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina atual.</p> required <code>current_page</code> <code>int</code> <p>N\u00famero da p\u00e1gina atual.</p> required <code>total_pages</code> <code>int</code> <p>N\u00famero total de p\u00e1ginas dispon\u00edveis.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o bot\u00e3o de pr\u00f3xima p\u00e1gina n\u00e3o for encontrado.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__parse_search_result_item","title":"<code>__parse_search_result_item(item: ElementHandle, mode: Literal['cpf', 'cnpj']) -&gt; CpfSearchResult | CnpjSearchResult</code>  <code>async</code>","text":"<p>Faz o parse de um item individual da lista de resultados.</p> <p>Parameters:</p> Name Type Description Default <code>item</code> <code>ElementHandle</code> <p>Elemento HTML do item.</p> required <code>mode</code> <code>Literal['cpf', 'cnpj']</code> <p>Modo de busca atual.</p> required <p>Returns:</p> Type Description <code>CpfSearchResult | CnpjSearchResult</code> <p>CpfSearchResult | CnpjSearchResult: Resultado convertido.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o item n\u00e3o contiver os dados esperados.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__resolve_mode","title":"<code>__resolve_mode(mode: str) -&gt; str</code>","text":"<p>Retorna o subdom\u00ednio correspondente ao modo de busca.</p> <p>Parameters:</p> Name Type Description Default <code>mode</code> <code>str</code> <p>Modo (\"cpf\" ou \"cnpj\").</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Subdom\u00ednio correspondente.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o modo for inv\u00e1lido.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.__validate_filter","title":"<code>__validate_filter(_filter: CNPJSearchFilter | CPFSearchFilter, mode: Literal['cnpj', 'cpf']) -&gt; None</code>","text":"<p>Valida se o filtro informado \u00e9 compat\u00edvel com o modo de busca.</p> <p>Parameters:</p> Name Type Description Default <code>_filter</code> <code>CNPJSearchFilter | CPFSearchFilter</code> <p>Filtro a ser validado.</p> required <code>mode</code> <code>Literal['cnpj', 'cpf']</code> <p>Modo de busca.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o filtro n\u00e3o corresponder ao modo.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.build_query_url","title":"<code>build_query_url(query: str, *, mode: Literal['cpf', 'cnpj'] = 'cpf', _filter: CNPJSearchFilter | CPFSearchFilter | None = None) -&gt; str</code>","text":"<p>Constr\u00f3i a URL de consulta com base no termo, modo e filtros.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>Termo de busca (CPF ou CNPJ).</p> required <code>mode</code> <code>Literal['cpf', 'cnpj']</code> <p>Modo de busca.</p> <code>'cpf'</code> <code>_filter</code> <code>CNPJSearchFilter | CPFSearchFilter</code> <p>Filtro adicional.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>URL completa para a consulta.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.fetch","title":"<code>fetch(page: Page) -&gt; List[CpfSearchResult | CnpjSearchResult]</code>  <code>async</code>","text":"<p>Realiza a extra\u00e7\u00e3o de resultados da p\u00e1gina atual j\u00e1 carregada.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>Inst\u00e2ncia da p\u00e1gina carregada.</p> required <p>Returns:</p> Type Description <code>List[CpfSearchResult | CnpjSearchResult]</code> <p>List[CpfSearchResult | CnpjSearchResult]: Lista de resultados extra\u00eddos da p\u00e1gina.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.parse_results_count","title":"<code>parse_results_count(he: Locator | ElementHandle) -&gt; int</code>  <code>async</code>","text":"<p>Extrai a quantidade de resultados exibida na p\u00e1gina.</p> <p>Parameters:</p> Name Type Description Default <code>he</code> <code>Locator | ElementHandle</code> <p>Elemento contendo o texto da contagem.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>N\u00famero total de resultados. Retorna -1 se a contagem n\u00e3o for identificada.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.parse_search_result_content","title":"<code>parse_search_result_content(page: Page) -&gt; List[CpfSearchResult | CnpjSearchResult]</code>  <code>async</code>","text":"<p>Faz o parsing completo da lista de resultados exibida na p\u00e1gina.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina da lista de busca.</p> required <p>Returns:</p> Type Description <code>List[CpfSearchResult | CnpjSearchResult]</code> <p>List[CpfSearchResult | CnpjSearchResult]: Lista de resultados convertidos.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.parse_search_result_itens","title":"<code>parse_search_result_itens(itens: List[ElementHandle], mode: Literal['cpf', 'cnpj']) -&gt; List[CpfSearchResult | CnpjSearchResult]</code>  <code>async</code>","text":"<p>Processa individualmente os itens da lista de busca.</p> <p>Parameters:</p> Name Type Description Default <code>itens</code> <code>List[ElementHandle]</code> <p>Elementos HTML da lista.</p> required <code>mode</code> <code>Literal['cpf', 'cnpj']</code> <p>Modo de busca atual.</p> required <p>Returns:</p> Type Description <code>List[CpfSearchResult | CnpjSearchResult]</code> <p>List[CpfSearchResult | CnpjSearchResult]: Resultados convertidos.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.safe_load","title":"<code>safe_load(page: Page, timeout: int = 5) -&gt; None</code>  <code>async</code>","text":"<p>Aguarda o carregamento da p\u00e1gina de resultados.</p> <p>Caso o tempo expire, tenta garantir se a aus\u00eancia de resultados \u00e9 leg\u00edtima.</p> <p>Parameters:</p> Name Type Description Default <code>page</code> <code>Page</code> <p>P\u00e1gina da busca.</p> required <code>timeout</code> <code>int</code> <p>Tempo m\u00e1ximo de espera (em segundos).</p> <code>5</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Se o elemento de resultados n\u00e3o for encontrado.</p>"},{"location":"crawler/searcher/#desafio_mosqti.core.crawlers.searcher.Searcher.search","title":"<code>search(query: str, *, mode: Literal['cpf', 'cnpj'] = 'cpf', _filter: CNPJSearchFilter | CPFSearchFilter | None = None, raise_for_captcha: bool = True, limit_results: int | None = None, max_retries: int = 3, jitter: bool = False) -&gt; List[CpfSearchResult | CnpjSearchResult]</code>  <code>async</code>","text":"<p>Executa uma busca no Portal da Transpar\u00eancia, retornando os resultados estruturados.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>Termo a ser buscado (CPF ou CNPJ).</p> required <code>mode</code> <code>Literal['cpf', 'cnpj']</code> <p>Modo de busca (pessoa f\u00edsica ou jur\u00eddica).</p> <code>'cpf'</code> <code>_filter</code> <code>CNPJSearchFilter | CPFSearchFilter</code> <p>Filtro adicional de busca.</p> <code>None</code> <code>raise_for_captcha</code> <code>bool</code> <p>Se True, levanta uma exce\u00e7\u00e3o se um captcha for detectado. Defaults to True.</p> <code>True</code> <code>limit_results</code> <code>int | None</code> <p>Caso informado, limitar\u00e1 a lista de resultados de busca para os N primeiros itens. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>List[CpfSearchResult | CnpjSearchResult]</code> <p>List[CpfSearchResult | CnpjSearchResult]: Lista de resultados da busca.</p>"}]}